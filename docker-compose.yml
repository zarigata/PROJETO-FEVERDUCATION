# /////////////////////////////////////////////////////////////////////////////
# //                                                                         //
# //  [FEVERDUCATION] - Docker Compose Configuration                         //
# //  ---------------------------------------------------------------        //
# //  This file defines the complete containerized environment for the       //
# //  FeverEducation application, including Next.js frontend, Python AI      //
# //  backend, PostgreSQL database, and Ollama LLM service.                  //
# //                                                                         //
# //  CODEX LEVEL: ALPHA-7                                                   //
# //  VERSION: 1.0.0                                                         //
# //  PLATFORM: CROSS-COMPATIBLE (WIN/LINUX)                                 //
# //                                                                         //
# /////////////////////////////////////////////////////////////////////////////

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: feverducation-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-feverducation}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fevereducation_pass}
      POSTGRES_DB: ${POSTGRES_DB:-feverducation}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U feverducation"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - feverducation-network

  # Ollama AI service
  ollama:
    image: ollama/ollama:latest
    container_name: feverducation-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    command: serve
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - feverducation-network

  # Python AI Backend service
  ai-backend:
    build:
      context: .
      dockerfile: ai-backend/Dockerfile
    container_name: feverducation-ai-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-feverducation}:${POSTGRES_PASSWORD:-fevereducation_pass}@postgres:5432/${POSTGRES_DB:-feverducation}
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - ./ai-backend:/app/ai-backend
    networks:
      - feverducation-network

  # Next.js frontend
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.nextjs
    container_name: feverducation-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-feverducation}:${POSTGRES_PASSWORD:-fevereducation_pass}@postgres:5432/${POSTGRES_DB:-feverducation}
      - AI_BACKEND_URL=http://ai-backend:8000
      - NODE_ENV=production
    depends_on:
      - postgres
      - ai-backend
    networks:
      - feverducation-network
      
  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: feverducation-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@fevereducation.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - feverducation-network

networks:
  feverducation-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  ollama_data:
